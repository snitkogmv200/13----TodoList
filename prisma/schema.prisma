generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  date_created  DateTime    @default(now())
  date_modified DateTime    @updatedAt
  email         String      @unique @db.VarChar(64)
  name          String      @db.VarChar(64)
  nickname      String      @unique @db.VarChar(64)
  password      String      @db.VarChar(128)
  projects      Project[]

  @@map("user")
}

model Project {
  id           String   @id @default(cuid())
  date_created DateTime @default(now())
  name         String   @db.VarChar(64)
  description  String?  @db.VarChar(128)
  userId       String   @map("user_id")
  user         User     @relation(fields: [userId], references: [id])
  productivityId String @map("productivity_id")
  productivity Productivity @relation(fields: [productivityId], references: [id]) 
  categoryId  String @map("category_id")
  category Category @relation(fields: [categoryId], references: [id])
  tasks        Task[]

  @@map("project")
}

model Task {
  id            String    @id @default(cuid())
  date_created  DateTime  @default(now())
  date_modified DateTime  @updatedAt
  name          String
  isCompleted   Boolean  @default(false) @map("is_completed")
  sequence_number      Int @default(autoincrement())
  projectId     String    @map("projectId")
  project       Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("task")
}

model Productivity {
  id          String      @id @default(cuid())
  value       String      @unique @db.VarChar(64)
  description String?     @db.VarChar(128)
  sequence_number      Int @default(autoincrement())
  projects      Project[]

  @@map("productivity")
}

model Category {
  id          String      @id @default(cuid())
  name        String      @db.VarChar(64)
  description String?     @db.VarChar(128)
  projects    Project[]

  @@map("category")
}
