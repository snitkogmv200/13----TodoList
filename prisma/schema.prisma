generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  date_created  DateTime  @default(now())
  date_modified DateTime  @updatedAt
  email         String    @unique @db.VarChar(64)
  name          String    @db.VarChar(64)
  password      String    @db.VarChar(128)
  nickname      String    @unique @db.VarChar(64)
  projects      Project[]
  tasks         Task[]
  user_roles    UserRoles[]

  @@map("user")
}

model Project {
  id           String     @id @default(cuid())
  date_created DateTime   @default(now())
  name         String     @unique @db.VarChar(64)
  description  String?    @db.VarChar(128)
  userId       String     @map("user_id")
  user         User       @relation(fields: [userId], references: [id])
  tasks_list   TaskList[]

  @@map("project")
}

model Task {
  id            String    @id @default(cuid())
  date_created  DateTime  @default(now())
  date_modified DateTime  @updatedAt
  name          String   @db.VarChar(64)
  taskListId    String   @map("task_list_id")
  userId        String    @map("user_id")
  order         Int       @default(autoincrement())
  task_list     TaskList @relation(fields: [taskListId], references: [id], onDelete: Cascade)
  user          User      @relation(fields: [userId], references: [id])

  @@map("task")
}

model TaskList {
  id          String  @id @default(cuid())
  value       String  @unique @db.VarChar(64)
  description String? @db.VarChar(128)
  projectId   String  @map("project_id")
  order       Int     @default(autoincrement())
  tasks       Task[]
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("task_list")
}

model Role {
  id          String  @id @default(cuid())
  value       String  @unique @db.VarChar(64)
  description String? @db.VarChar(128)
  user_roles    UserRoles[]

  @@map("role")
}

model UserRoles {
  id          String  @id @default(cuid())
  userId    String   @map("user_id")
  roleId        String    @map("role_id")
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  role     Role      @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@map("user_roles")
}
